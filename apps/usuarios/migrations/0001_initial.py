# Generated by Django 3.2 on 2022-04-06 12:50

import apps.usuarios.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Usu√°rio')),
                ('email', models.EmailField(max_length=255, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Membro')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Super user')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', apps.usuarios.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='usuarios.usuario')),
                ('nome', models.CharField(max_length=255)),
                ('logradouro', models.CharField(max_length=255)),
                ('numero', models.IntegerField()),
                ('cep', models.CharField(max_length=11)),
                ('localidade', models.CharField(max_length=255)),
                ('bairro', models.CharField(max_length=255)),
                ('complemento', models.CharField(max_length=255)),
                ('telefone', models.CharField(max_length=20)),
                ('cpf', models.CharField(max_length=15, unique=True, verbose_name='CPF')),
            ],
            options={
                'db_table': 'pessoa',
            },
            bases=('usuarios.usuario',),
            managers=[
                ('objects', apps.usuarios.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Atendente',
            fields=[
                ('pessoa_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='usuarios.pessoa')),
            ],
            options={
                'db_table': 'atendente',
            },
            bases=('usuarios.pessoa',),
            managers=[
                ('objects', apps.usuarios.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Gerente',
            fields=[
                ('pessoa_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='usuarios.pessoa')),
            ],
            options={
                'db_table': 'gerente',
            },
            bases=('usuarios.pessoa',),
            managers=[
                ('objects', apps.usuarios.models.UserManager()),
            ],
        ),
    ]
